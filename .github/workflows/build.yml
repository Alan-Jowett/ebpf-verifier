name: CPP CI

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'Dockerfile'

concurrency:
  # Cancel any CI/CD workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: build-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build_ubuntu:
    strategy:
      matrix:
        configurations: [Debug, Release]
        options: ['AddressSanitizer', 'NoSanitizer']
    runs-on: ubuntu-latest
    env:
      # Configuration type to build.  For documentation on how build matrices work, see
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: ${{matrix.configurations}}

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt install libboost-dev libboost-filesystem-dev libboost-program-options-dev libyaml-cpp-dev valgrind

      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Build
        run: |
          if [ "${{matrix.options}}" = "AddressSanitizer" ]; then
            export SANITIZER_FLAGS="-fsanitize=address -fsanitize=undefined"
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            sudo ./llvm.sh 18
            sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-18 100
            sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang-18 100
          fi
          mkdir build
          cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_CONFIGURATION}} -DCMAKE_CXX_FLAGS="${SANITIZER_FLAGS}" -DCMAKE_C_FLAGS="${SANITIZER_FLAGS}"
          cmake --build build -j $(nproc)

      - name: Run unit tests
        run: ./tests -d yes

      - name: Test for memory leaks
        if: matrix.options == 'NoSanitizer'
        # Any memory leaks will cause the test to fail
        # This BPF program was chosen because it is the largest one in the repo
        run: valgrind --leak-check=full --errors-for-leak-kinds=all  --show-leak-kinds=all --error-exitcode=1 ./check ebpf-samples/cilium/bpf_xdp_snat_linux_v1.o 2/1

  build_windows:
    strategy:
      matrix:
        configurations: [Debug, Release]
    runs-on: windows-2022
    env:
      # Configuration type to build.  For documentation on how build matrices work, see
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: ${{matrix.configurations}}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Build
        run: |
          mkdir build
          cmake -B build
          cmake --build build -j $(nproc) --config ${{env.BUILD_CONFIGURATION}}

      - name: Run unit tests
        run: ./${{env.BUILD_CONFIGURATION}}/tests -d yes
